version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: esencelab-mongodb-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: esencelab
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - esencelab-network
    # Don't expose port in production - only internal access

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: esencelab-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/esencelab?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - mongodb
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - esencelab-network
    # Don't expose port - accessed through nginx

  # Frontend Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${API_BASE_URL:-https://api.yourdomain.com}
    container_name: esencelab-frontend-prod
    restart: always
    depends_on:
      - backend
    networks:
      - esencelab-network
    # Don't expose port - accessed through nginx

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: esencelab-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - esencelab-network

volumes:
  mongodb_data:
    driver: local

networks:
  esencelab-network:
    driver: bridge
